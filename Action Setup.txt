@set here=_holodeck/version:0.1.0

lsedit here=_holodeck/scripts/commands/admin
.del 1 999
{null:
	{if:{not:{isAdmin?:me}},
        {tell:
            {lit:The computer lets out a buzzing sound, and a soothing voice says,}
            {lit: "We're sorry, you do not have access to the admin functionalities here."}
        }
    ,
            {tell:Cmd 'admin' - Arg [{&arg}]! First is [{str/takefirst:{&arg}}]}
            {gui/header:Holodeck Administrative Menu}
            {gui/lrborder:
                {lit: }{nl}
                No administrative functionalities installed yet.{nl}
                {lit: }
                {lit: }
                ,
                {lit:|      },{lit:      |}
            }
            {gui/footer}
    }
}
.end

lsedit here=_holodeck/scripts/commands/status
.del 1 999
{null:
    {tell:{gui/Header:Holodeck Status}{nl}}
    {lit: }{nl}
    {if:{isOff?},
        {gui/lrborder:
            {lit: }{nl}            
            The holodeck is currently off!{nl}
            {lit: }{nl}
            Use 'list' to find a program to run\, and 'switch <program>' to{nl}
            run it!{nl}
            {lit: },
            {lit:|      },{lit:      |}
        }
    ,
        {gui/lrborder:
            {lit: }{nl}
            You are currently running:{nl}
            {lit: },
            {lit:|      },{lit:      |}
        }

        {varColPrnt:{wordwrap:{currentProgram},60},80,1,|      [  ,  ,  ]      |}

        {gui/lrborder:
            {lit: }{nl}
            The available exits are:{nl}
            {lit: },
            {lit:|      },{lit:      |}
        }

        {with:exits,{parse:cExit,{getExits:{CurrentProgram}},<{&cExit}>},
            {with:maxLength,{fold:l,r,\r{&exits},{max:{&l},{strlen:{&r}}}},
            {with:columnNum,{div:60,{&maxLength}},
                {null:This is checking if I have enough space for the padding between names.}
                {null: {80 - 20 - (columnNum * maxLength)} < (columnNum - 1) * 2 }
                {if:
                    {lt:{subt:60,{mult:{&columnNum},{&maxLength}}},{mult:{subt:{&columnNum},1},2}},
                    {dec:columnNum}
                }
                {set:columnNum,{min:{count:{&exits}},{&columnNum}}}
                {varColPrnt:{&exits},80,{&columnNum},|      [  ,  ,  ]      |}
            }
            }
        }

        {gui/lrborder:
            {lit: }{nl}
            You can use 'go <exit name>' to move to that room.{nl}
            {lit: },
            {lit:|      },{lit:      |}
        }
    }
    {tell:{gui/Footer}{nl}}
}
.end

lsedit here=_holodeck/scripts/commands/list
.del 1 999
{null:
    {tell:{nl}{gui/Header:Holodeck Program Listing}{nl}}
    {tell:|{center:,78}|}
    {with:maxLength,0,
    {with:columnNum,0,
    {with:maxSectCount,0,
        {foreach:curr, {getRoomList},
            {set:maxlength,{max:{&maxlength},{strlen:{&curr}}}}
        }
        {foreach:currZone,{getZoneList},
            {set:maxSectCount,{max:{&maxSectCount},{count:{getZoneRooms:{&currZone}}}}}
        }
        {set:maxSectCount, {max:{&maxSectCount},{count:{getZoneRooms}}}}

        {set:columnNum,{div:76,{&maxLength}}}
        {null:This is checking if I have enough space for the padding between names.}
        {null: {76 - (columnNum * maxLength)} < (columnNum - 1) * 3 }
        {if:
            {lt:{subt:76,{mult:{&columnNum},{&maxLength}}},{mult:{subt:{&columnNum},1},2}},
            {dec:columnNum}
        }
        {set:columnNum,{min:{&maxSectCount},{&columnNum}}}

        {foreach:currZone,{getZoneList},
            {tell:|{center:*  {&currZone} Zone  *,78, }|}
            {tell:|{center:,78}|}
            {null:|{center:,78}|}
            {null:| {center:{center:,{strlen:{&currZone}},~},76} |}
            {varColPrnt:{getZoneRooms:{&currZone}},80,{&columnNum},| ,  , |}
            {tell:|{center:,78}|}
            {null:+{center:,78,-}+}
        }
        {if:{count{getZoneRooms}},
            {tell:|{center:(  Uncategorized  ),78, }|}
            {null:|{center:,78}|}
            {null:| {center:{center:,{strlen:(Uncategorized)},~},76} |}
            {varColPrnt:{getZoneRooms},80,{&columnNum},| ,  , |}
        }
        {tell:|{center:,78}|}
        {tell:{gui/Footer:switch <program name>}}
    }
    }
    }
}
.end



lsedit here=_holodeck/scripts/commands/switch
.del 1 999
{null:
    {set:arg,{strip:{&arg}}}
	{if:
        {eq:{&arg},},
            {gui/header:Holodeck Help}
            {gui/lrborder:
                {lit: }{nl}
                Syntax for switch is:{nl}
                {lit: }{nl}
                switch off:       Turn the holodeck off.{nl}
                switch <program>: Switch to the specified program.{nl}
                {lit: }{nl}
                You can view a list of programs with 'list'.{nl}
                {lit: }
                ,
                {lit:|      },{lit:      |}
            }
            {gui/footer}
        ,
        {if:
            {eq:{&arg},off},
            {if:
                {eq:{currentProgram},off},
                    {gui/header:Holodeck Help}
                    {gui/lrborder:
                        {lit: }{nl}
                        The holodeck is already off!{nl}
                        {lit: }
                        ,
                        {lit:|      },{lit:      |}
                    }
                    {gui/footer}
                ,
                {clearDetails}
                {store:off,_holodeck/current,here}
                {mbroadcast:deactivate,Off,Off}
            },
            {if:
                {not:{propdir:_holodeck/rooms/{&arg},here}},
                {gui/header:Holodeck Help}
                {gui/lrborder:
                    {lit: }{nl}
                    That program doesn't exist!{nl}
                    {lit: }{nl}
                    Type 'list' to see the available programs.{nl}
                    {lit: }
                    ,
                    {lit:|      },{lit:      |}
                }
                {gui/footer}
                ,
                {if:
                    {eq:{currentProgram},{&arg}},
                    {gui/header:Holodeck Help}
                    {gui/lrborder:
                        {lit: }{nl}
                        The holodeck is already set to that program!{nl}
                        {lit: }
                        ,
                        {lit:|      },{lit:      |}
                    }
                    {gui/footer}
                    ,
                    {set:arg,{cleanName:{&arg}}}
                    {if:
                        {isOff?},
                        {mbroadcast:activate,{&arg},{getname:{&arg}}},
                        {mbroadcast:switch,{&arg},{getname:{&arg}}}
                    }
                    {copyDetails:{&arg}}
                    {store:{&arg},_holodeck/current,here}
                    
                }
            }
        }
    }
}
.end



lsedit here=_holodeck/scripts/commands/go
.del 1 999
{null:
    {set:arg,{strip:{&arg}}}
    {if:
        {eq:{&arg},},
        {tell:> Where do you want to go? (type 'go <exit>' to change locations.)},
        {if:
            {isOff?},
            {tell:> The holodeck is off! You can switch it on with 'switch <program>'.}, 
            {with:dest,{findExitProp2:{currentProgram},{&arg},dest,arg,/},
            {if:
                {eq:{&dest},/}
                ,
                {tell:> That isn't a valid exit!},
                {if:
                    {or:
                        {eq:{&dest},},
                        {not:{propdir:_holodeck/rooms/{&dest},here}}
                    },
                    {tell:
                        As you try to go that direction\, something in the simulation glitches.
                        Please report the following to {name:{owner:here}}:
                        [ Error: Program '{currentProgram}' Exit: '{&arg}' Destination: '{&dest}' ]
                    },
                    {doExitMsg:{&arg},succ,{currentProgram},{getName:{currentProgram}}}
                    {copyDetails:{&dest}}
                    {store:{&dest},_holodeck/current,here}
                    {tell:{holodesc}}
                }
            }
            }
        }
    }
}
.end

Real exit dispatch

@set here=_msgmacs/exitMove:{lexec:_holodeck/scripts/commands/exitMove}
lsedit here=_holodeck/scripts/commands/exitMove
.del 1 999
{null:{set:arg,{&cmd}}}
{null:
    {if:{isOff?},
        {tell:You can't go that way!}
        ,    
        {with:dest,{findExitProp2:{currentProgram},{&arg},dest,arg,/},
            {if:
                {eq:{&dest},/}
                ,
                {tell:Huh?},
                {if:
                    {or:
                        {eq:{&dest},},
                        {not:{propdir:_holodeck/rooms/{&dest},here}}
                    },
                    {tell:
                        As you try to go that direction\, something in the simulation glitches.{nl}
                        Please report the following to {name:{owner:here}}:{nl}
                        [ Error: Program '{currentProgram}' Exit: '{&arg}' Destination: '{&dest}' ]
                    },
                    {doExitMsg:{&arg},succ,{currentProgram},{getName:{currentProgram}}}
                    {copyDetails:{&dest}}
                    {store:{&dest},_holodeck/current,here}
                    {tell:{holodesc}}
                }
            }
        }
    }
}

.end