@set here=_msgmacs/:

@set here=_msgmacs/holodesc:{if:{isoff?},{eval:{list:_holodeck/default/desc}},<<{getname:{currentprogram}}>>{nl}{eval:{list:_holodeck/rooms/{currentProgram}/desc}{nl}}{obvExits}}
@set here=_msgmacs/getVersion:{prop:_holodeck/version,here}
@set here=_msgmacs/dispatch:{lexec:_holodeck/scripts/commands/{&cmd}}

)) 1 - propdir, 2 - message type, 3 - programcode, 4 - programname, 5 - suffix message
@set here=_msgmacs/broadcast:{null:{tell:{eval:{doSubsts:{prop:{:1}{:2}},{:3},{:4}}}{:5}}{otell:{eval:{doSubsts:{prop:{:1}o{:2}},{:3},{:4}}}{:5}}}
)) 
@set here=_msgmacs/mbroadcast:{broadcast:_holodeck/default/messages/,{:1},{:2},{:3}}
)) 1 - message type, 2 - programcode, 3 - programname
@set here=_msgmacs/ebroadcast:{debugif:0,{broadcast:_holodeck/rooms/{currentProgram}/exits/{:1}/,{:2},{:3},{:4}, ((New description))}}

)) 1 - exit name, 2 - message type, 3 - programcode, 4 - programname
@set here=_msgmacs/doExitMsg:{func:exitHlpr,exitName,msgType,pcode,pname,{lexec:_holodeck/scripts/functions/doExitMsg,here}}{exitHlpr:{:1},{:2},{:3},{:4}}
lsedit here=_holodeck/scripts/functions/doExitMsg
.del 1 999
{with:succMsg,{prop:_holodeck/rooms/{currentProgram}/exits/{&exitName}/{&msgType}},
    {if:{eq:{&succMsg},},{set:succMsg,You take the exit '{&exitName}'.}}
    {with:oSuccMsg,{prop:_holodeck/rooms/{currentProgram}/exits/{&exitName}/o{&msgType}},
        {if:{eq:{&oSuccMsg},},{set:oSuccMsg,{name:me} takes the exit '{&exitName}'.}}
        {set:oSuccMsg,{&oSuccMsg} ((New room description))}
        {tell:{pronouns:{eval:{doSubsts:{&succMsg},{&pcode},{&pname}}}}}
        {otell:{pronouns:{eval:{doSubsts:{&oSuccMsg},{&pcode},{&pname}}}}}
    }
}
.end

// 1 - input string, 2 - program code, 3 - programname
@set here=_msgmacs/doSubsts:{subst:{subst:{:1},%programcode,{:2}},%programname,{:3}}

@set here=_msgmacs/getRoomList:{parse:curr,{listprops:_holodeck/rooms/,here},{subst:{&curr},_holodeck/rooms/,}}

@set here=_msgmacs/currentProgram:{with:val,{prop:_holodeck/current,here},{if:{eq:{&val},},Off,{&val}}}

@set here=_msgmacs/isOff?:{eq:off,{currentProgram}}

@set here=_msgmacs/getName:{if:{eq:{:1},Off},Off,{with:val,{prop:_holodeck/rooms/{:1}/name},{if:{eq:{&val},},{:1},{&val}}}}
@set here=_msgmacs/cleanName:{lcommon:{:1},{getRoomList}}

@set here=_msgmacs/getExits:{parse:curr,{listprops:_holodeck/rooms/{:1}/exits,here},{subst:{&curr},_holodeck/rooms/{:1}/exits/,}}
@set here=_msgmacs/fmtExits:{commas:{getExits:{currentProgram}}, and ,curr,<{&curr}>}
@set here=_msgmacs/obvExits:{with:fExits,{fmtExits},{if:{ne:{&fExits},},[ Obvious Exits ('go <exit>'): {&fExits} ]}}


@set here=_msgmacs/str/TakeFirst:{midstr:{strip:{:1}},1,{subt:{instr:{strip:{:1}},{if:{:2},{:2}, }},1}}
@set here=_msgmacs/str/TakeRest:{midstr:{strip:{:1}},{add:{instr:{strip:{:1}},{if:{:2},{:2}, }},1},{strlen:{strip:{:1}}}}

@set here=_msgmacs/clearDetails:{delprop:_details,here}

@set here=_msgmacs/copyDetails:{func:cpyDetHlpr,pcode,{lexec:_holodeck/scripts/functions/copyDetails,here}}{cpyDetHlpr:{:1}}
lsedit here=_holodeck/scripts/functions/copyDetails
.del 1 999
{clearDetails}
{with:dets,{parse:curr,{listprops:_holodeck/rooms/{&pcode}/details,here},{subst:{&curr},_holodeck/rooms/{&pcode}/details/,}},
    {foreach:curr,{&dets},
        {store:{prop:_holodeck/rooms/{&pcode}/details/{&curr},here},_details/{&curr},here}
    }
}
{with:exits,{getExits:{&pcode}},
    {with:currentDetail,"",
        {foreach:currExit,{&exits},
            {set:currentDetail,
                {prop:_holodeck/rooms/{&pcode}/exits/{&currExit}/detail,here}
            }
            {if:{eq:{&currentDetail},},
                {set:currentDetail,You see the exit for '{&currExit}' that leads to '{cleanName:{prop:_holodeck/rooms/{&pcode}/exits/{&currExit}/dest,here}}'.}
            }
            {store:{&currentDetail},_details/{&currExit},here}
        }
    }
}
.end


)) Zonelist
@set here=_msgmacs/getZoneList:{lsort:{lremove:{lunique:{parse:curr,{listprops:_holodeck/rooms/,here},{prop:{&curr}/zone,here}}},\r}}
)) 1 - The zone to get the rooms for. Leave blank to get rooms without a zone.
@set here=_msgmacs/getZoneRooms:{parse:currParse,{filter:curr,{listprops:_holodeck/rooms/,here},{eq:{prop:{&curr}/zone,here},{:1}}},{subst:{&currPArse},_holodeck/rooms/,}}

)) 1 - the list to pad, 2 - the length to pad out, 3? - the text to pad with; defaults to " ", 4? - seperator, defaults to "\r"
@set here=_msgmacs/lPad:{func:lPadHlpr,list,newLength,pad,sep,{lexec:_holodeck/scripts/functions/lPad,here}}{lPadHlpr:{:1},{:2},{:3},{:4}}
lsedit here=_holodeck/scripts/functions/lPad
.del 1 999
{null:
{for:i,1,{subt:{&newLength},{count:{&list},{sep?:{&sep}}}},1,
    {set:list,{&list}{sep?:{&sep}}{pad?:{&pad}, }}
}
}
{&list}
.end
)) 1 - the list to pad, 2 - the length to pad out, 3? - the text to pad with; defaults to " ", 4? - seperator, defaults to "\r"
@set here=_msgmacs/lPad:{with:plList,{:1},{null:{for:i,1,{subt:{:2},{count:{:1},{default:{:4},\r}}},1,{set:plList,{&plList}{default:{:4},\r}{default:{:3}, }}        }    }{&plList}}


)) 1 - the list to join, 2 - the text to join with, 3? - list separator, defaults to \r
@set here=_msgmacs/ljoin:{subst:{:1},{sep?:{:3}},{:2}}

@set here=_msgmacs/sep?:{default:{:1},\r}
@set here=msgmacs/pad?:{default:{:1},{:2}}



)) 1  - The list to print
)) 2  - Total width to print to
)) 3  - Number of columns to print
)) 4  - left margin
)) 5  - column padding
)) 6? - right margin (defaults to mirror of left column)
@set here=_msgmacs/varColPrnt:{func:varPrntHlper,vcpList,width,colCount,lMargin,cMargin,rMargin,{lexec:_holodeck/scripts/functions/varColPrnt,here}}{varPrntHlper:{:1},{:2},{:3},{:4},{:5},{:6}}
lsedit here=_holodeck/scripts/functions/varColPrnt
.del 1 999
{null:
{set:rMargin,{default:{&rMargin},{rstr:{&lMargin}}}}
{with:colWidth,{div:{subt:{&width},{strlen:{&lMargin}},{strlen:{&rMargin}},{mult:{subt:{&colCount},1},{strlen:{&cMargin}}}},{&colCount}},
    {with:rowCount,{div:{subt:{count:{&vcpList}},1},{&colCount}},
        {set:vcpList,{lPad:{&vcpList},{mult:{add:{&rowCount},1},{&colCount}}}}
        {set:vcpList,{parse:currRoom,{&vcpList},{center:{&currRoom},{&colWidth}}}}
        {for:i,0,{&rowCount},1,
            {tell:
                {&lMargin}
                {center:
                    {ljoin:
                        {sublist:{&vcpList},
                            {add:{mult:{&i},{&colCount}},1},
                            {mult:{add:{&i},1},{&colCount}}
                        },
                        {&cMargin}
                    },
                    {subt:{&width},{strlen:{&lMargin}},{strlen:{&rMargin}}}
                }
                {&rMargin}
            }
        }
    }
}
}
.end

)) 1  - The list to print
)) 2  - Total width to print to
)) 3  - Number of columns to print
)) 4  - left margin
)) 5  - column padding
)) 6? - right margin (defaults to mirror of left column)
@set here=_msgmacs/varColPrntL:{func:varPrntLHlper,vcpList,width,colCount,lMargin,cMargin,rMargin,{lexec:_holodeck/scripts/functions/varColPrntL,here}}{varPrntLHlper:{:1},{:2},{:3},{:4},{:5},{:6}}
lsedit here=_holodeck/scripts/functions/varColPrntL
.del 1 999
{null:
{set:rMargin,{default:{&rMargin},{rstr:{&lMargin}}}}
{with:colWidth,{div:{subt:{&width},{strlen:{&lMargin}},{strlen:{&rMargin}},{mult:{subt:{&colCount},1},{strlen:{&cMargin}}}},{&colCount}},
    {with:rowCount,{div:{subt:{count:{&vcpList}},1},{&colCount}},
        {set:vcpList,{lPad:{&vcpList},{mult:{add:{&rowCount},1},{&colCount}}}}
        {set:vcpList,{parse:currRoom,{&vcpList},{left:{&currRoom},{&colWidth}}}}
        {for:i,0,{&rowCount},1,
            {tell:
                {&lMargin}
                {center:
                    {ljoin:
                        {sublist:{&vcpList},
                            {add:{mult:{&i},{&colCount}},1},
                            {mult:{add:{&i},1},{&colCount}}
                        },
                        {&cMargin}
                    },
                    {subt:{&width},{strlen:{&lMargin}},{strlen:{&rMargin}}}
                }
                {&rMargin}
            }
        }
    }
}
}
.end

@set here=_msgmacs/rstr:{midstr:{:1},-1,1}

@set here=_msgmacs/isAdmin?:{or:{dbeq:{owner:here},me},{if:{lmember:{listprops:_holodeck,here},_holodeck/adminlock},{testlock:here,_holodeck/adminlock,me}}}

@set here=_msgmacs/drawTopBorder:/{center:{if:{:1},[  {:1}  ]},78,-}\\
@set here=_msgmacs/drawBotBorder:\\{center:{if:{:1},[  {:1}  ]},78,-}/

@set here=_msgmacs/rinstr:{with:rinstrResult,{instr:{rstr:{:1}},{rstr:{:2}}},{if:{&rinstrResult},{add:{subt:{strlen:{:1}},{&rinstrResult},{strlen:{:2}}},2},0}}
